{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "CommunityAutomationFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GetSet Video Views')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Video Stats",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://www.googleapis.com/youtube/v3/videos?part=statistics&id=@{pipeline().parameters.VideoId}&key=@{pipeline().parameters.APIKey}",
								"type": "Expression"
							},
							"method": "GET"
						}
					},
					{
						"name": "Insert Log Record",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Video Stats",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SetViewsLogEntry]",
							"storedProcedureParameters": {
								"VideoId": {
									"value": {
										"value": "@pipeline().parameters.VideoId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Views": {
									"value": {
										"value": "@activity('Get Video Stats').output.items[0].statistics.viewCount",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SpeakingLogs",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"VideoId": {
						"type": "string"
					},
					"APIKey": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Update Video Log')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Video Ids",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [VideoId] FROM [dbo].[VideoDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "GetSetDatabaseValues",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Update Video Log per Id",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Video Ids",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set First Log Entry",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get API Key from Key Vault",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Video Ids').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Set Video Log",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GetSet Video Views",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"VideoId": {
												"value": "@item().VideoId",
												"type": "Expression"
											},
											"APIKey": {
												"value": "@activity('Get API Key from Key Vault').output.value",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set First Log Entry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SetFirstVideoLogEntry]"
						},
						"linkedServiceName": {
							"referenceName": "SpeakingLogs",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get API Key from Key Vault",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://infokeystore.vault.azure.net/secrets/YouTubeAPIKey?api-version=7.0",
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/GetSet Video Views')]"
			]
		}
	]
}