{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "CommunityAutomationFactory"
		},
		"KeyStore_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://InfoKeyStore.vault.azure.net/"
		},
		"SpeakingLogs_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "SpeakingLogsDB"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GetSet Video Views')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Video Stats",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://www.googleapis.com/youtube/v3/videos?part=statistics&id=@{pipeline().parameters.VideoId}&key=AIzaSyAfU7nGfid93Hlfe2Qe7qSUQlZOdM-dQY0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Insert Log Record",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Video Stats",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SetViewsLogEntry]",
							"storedProcedureParameters": {
								"VideoId": {
									"value": {
										"value": "@pipeline().parameters.VideoId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Views": {
									"value": {
										"value": "@activity('Get Video Stats').output.items[0].statistics.viewCount",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SpeakingLogs",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"VideoId": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SpeakingLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyStore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyStore_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SpeakingLogs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyStore",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('SpeakingLogs_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Update Video Log')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Video Ids",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [VideoId] FROM [dbo].[VideoDetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "GetSetDatabaseValues",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Update Video Log per Id",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Video Ids",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set First Log Entry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Video Ids').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Set Video Log",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GetSet Video Views",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"VideoId": {
												"value": "@item().VideoId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set First Log Entry",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SetFirstVideoLogEntry]"
						},
						"linkedServiceName": {
							"referenceName": "SpeakingLogs",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetSetDatabaseValues')]",
				"[concat(variables('factoryId'), '/linkedServices/SpeakingLogs')]",
				"[concat(variables('factoryId'), '/pipelines/GetSet Video Views')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetSetDatabaseValues')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SpeakingLogs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SpeakingLogs')]"
			]
		}
	]
}